[{"path":"https://maurolepore.github.io/gum/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 gum authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maurolepore.github.io/gum/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauro Lepore. Author, maintainer.","code":""},{"path":"https://maurolepore.github.io/gum/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lepore M (2024). gum: Create Search Queries. R package version 0.0.0.9000, https://maurolepore.github.io/gum/, https://github.com/maurolepore/gum.","code":"@Manual{,   title = {gum: Create Search Queries},   author = {Mauro Lepore},   year = {2024},   note = {R package version 0.0.0.9000, https://maurolepore.github.io/gum/},   url = {https://github.com/maurolepore/gum}, }"},{"path":"https://maurolepore.github.io/gum/index.html","id":"gum","dir":"","previous_headings":"","what":"Create Search Queries","title":"Create Search Queries","text":"goal gum make easy create search queries, e.g. search jobs LinkedIn Google Jobs.","code":""},{"path":"https://maurolepore.github.io/gum/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Search Queries","text":"can install development version gum Github :","code":"# install.packages(\"pak\") pak::pak(\"maurolepore/gum\")"},{"path":"https://maurolepore.github.io/gum/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create Search Queries","text":"","code":"library(gum)  yes <- gum_phrase(c(\"R\", \"R/Pyton\", \"Pyton/R\")) |>   gum_or() |>   gum_group() yes |> cat() #> (\"R\" OR \"R/Pyton\" OR \"Pyton/R\") not <- gum_phrase(\"R&D\", \"R/D\") |>   gum_or() |>   gum_group() not |> cat() #> (\"R&D\" OR \"R/D\") and1 <- gum_query(\"package?\", \"developer\") and2 <- gum_query(c(\"developer\", \"engineer\"), \"software?\", rev = TRUE) and3 <- c(\"programmer\", \"data scientist\", \"analyst\") and <- c(and1, and2, and3) |>   gum_phrase() |>   gum_or() |>   gum_group() and |> cat() #> (\"developer\" OR \"package developer\" OR \"developer\" OR \"software developer\" OR \"engineer\" OR \"software engineer\" OR \"programmer\" OR \"data scientist\" OR \"analyst\") search <- yes |>    gum_not(not) |>    gum_and(and) search |> cat() #> (\"R\" OR \"R/Pyton\" OR \"Pyton/R\") NOT (\"R&D\" OR \"R/D\") AND (\"developer\" OR \"package developer\" OR \"developer\" OR \"software developer\" OR \"engineer\" OR \"software engineer\" OR \"programmer\" OR \"data scientist\" OR \"analyst\")"},{"path":"https://maurolepore.github.io/gum/index.html","id":"guis","dir":"","previous_headings":"","what":"GUIs","title":"Create Search Queries","text":"https://www.linkedin.com/jobs/ Google’s search bar type “jobs”","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrappers of paste(collapse = ) — gum","title":"Wrappers of paste(collapse = ) — gum","text":"Wrappers paste(collapse = )","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrappers of paste(collapse = ) — gum","text":"","code":"gum(...)  gum_or(...)  gum_and(...)  gum_not(...)  gum_group(...)  gum_phrase(...)"},{"path":"https://maurolepore.github.io/gum/reference/gum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrappers of paste(collapse = ) — gum","text":"... one R objects, converted character vectors.","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrappers of paste(collapse = ) — gum","text":"String.","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrappers of paste(collapse = ) — gum","text":"","code":"gum(\"a\", \"b\") #> [1] \"a b\" gum_and(\"a\", \"b\") #> [1] \"a AND b\" gum_or(\"a\", \"b\") #> [1] \"a OR b\" gum_not(\"a\", \"b\") #> [1] \"a NOT b\" gum_group(\"a\", \"b\") #> [1] \"(a)\" \"(b)\" gum_phrase(\"a\", \"b\") #> [1] \"\\\"a\\\"\" \"\\\"b\\\"\""},{"path":"https://maurolepore.github.io/gum/reference/gum_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand '?' to 0 or one occurrance of a term — gum_query","title":"Expand '?' to 0 or one occurrance of a term — gum_query","text":"Expand '?' 0 one occurrance term","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand '?' to 0 or one occurrance of a term — gum_query","text":"","code":"gum_query(x, y, rev = FALSE)"},{"path":"https://maurolepore.github.io/gum/reference/gum_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand '?' to 0 or one occurrance of a term — gum_query","text":"x, y Character. can contain one 'word?'. rev Revert order x y.","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand '?' to 0 or one occurrance of a term — gum_query","text":"Character. collapsed version x y ? expanded 0 one occurrance term.","code":""},{"path":"https://maurolepore.github.io/gum/reference/gum_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand '?' to 0 or one occurrance of a term — gum_query","text":"","code":"gum_query(c(\"a\", \"b\"), \"c?\") #> [1] \"a\"   \"a c\" \"b\"   \"b c\""}]
